package com.demo.folder.entity.dto.request;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Data;

import java.util.List;

@Data
public class TrainerRequestDTO {
    @Schema(accessMode = Schema.AccessMode.READ_ONLY, description = "Unique identifier, generated by the server")
    private Long id;

    @NotBlank(message = "First Name is required")
    private String firstName;

    @NotBlank(message = "Last Name is required")
    private String lastName;

    @Schema(accessMode = Schema.AccessMode.READ_ONLY, description = "Unique userName, generated by the server")
    private String username;
    @Schema(accessMode = Schema.AccessMode.READ_ONLY, description = "Unique passWord, generated by the server")
    private String password;

    @NotNull(message = "Training Type `id` is required")
    private Long trainingTypeId;

    @Schema(accessMode = Schema.AccessMode.READ_ONLY, description = "isActive which is set by false as a default by server")
    private boolean isActive;

    @Schema(accessMode = Schema.AccessMode.READ_ONLY, description = "Trainer's trainee's list that is empty by default")
    private List<String> trainees;

    public @NotNull(message = "Training Type `id` is required") Long getTrainingTypeId() {
        return trainingTypeId;
    }

    public void setTrainingTypeId(
            @NotNull(message = "Training Type `id` is required") Long trainingTypeId) {
        this.trainingTypeId = trainingTypeId;
    }

    public boolean isActive() {
        return isActive;
    }

    public void setActive(boolean active) {
        isActive = active;
    }

}